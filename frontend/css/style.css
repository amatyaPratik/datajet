
  @import url('https://fonts.googleapis.com/css2?family=Audiowide&family=Foldit:wght@400;500;600&family=Great+Vibes&family=Londrina+Sketch&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;1,100;1,200;1,300&family=Roboto:wght@100;300;400;900&family=Rubik+Beastly&family=Sacramento&display=swap');

body{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Poppins', sans-serif !important;
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow-y: hidden;
} 
 
button, .btn, input[type="checkbox"], a{
    cursor: pointer !important;
}
.btn:disabled, input[type="checkbox"]:disabled{
    cursor: not-allowed !important;
}
h4 span.pipeline-status{
    text-transform: uppercase !important;
    font-style: oblique !important;
    color: gray;
    /* font-size: 1rem; */
}

.background-node {
     text-overflow: clip;
     overflow: hidden;
     word-wrap:break-word;
     fill: rgba(0, 0, 0, 0.2); /* Transparent black background */
}
/* Style for the label text */
.label-text {
     font-size: 12px;
    text-anchor: middle; /* Center the text horizontally */
    dominant-baseline: central; /* Center the text vertically */
     fill: white; /* White text color */
     text-overflow:clip;
}

svg g.running rect{
    /* fill: coral !important; */
    stroke-width: 4px;
    stroke: coral !important;
} 

svg g.complete rect{
    /* fill: greenyellow !important; */
    stroke-width: 4px;
    stroke: green !important;
} 

svg g.failed rect{
    /* fill: greenyellow !important; */
    stroke-width: 4px;
    stroke: crimson !important;
} 

#menu-tray{
	display: inline-block;
	position: absolute;
	right: 0;
    top: 0; 
    padding: 10px;
}
#menu-tray button{
    border: 0;
    outline: 0;
    background-image: url('../images/dots-menu.png');
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    cursor: pointer;
    width: 40px;
    height: 40px;
}
#menu-panel{
    padding: .4rem .3rem;
    border-radius: 4px 0 0 4px;
    position: absolute;
    background-color:#31006f;   
    backdrop-filter:  blur(4px); 
    opacity: .5;
    z-index: 2;
    width: 18vw;
    right: 0;
    color: white;
    font-size: 1.2rem;
    transition: 200ms all;
}

body #panel{
    background:steelblue;
    height: 100% !important;
    border-radius: 7px;
}

body.stopped #panel{
    display: block;
}
body.stopped #btn-run{
    display: initial;
}
body.stopped #btn-stop{
    display: none;
}

body.running #panel{
    display: none;
}
body.running #btn-run{
    display: none;
}
body.running #btn-stop{
    display: initial;
}

body.running #save-process-config{
    display: none;
}
body.stopped #save-process-config{
    display: initial;
}

#panel.hide{
    display: none;
}
#menu-panel.display{
    right: 0;
}
#menu-panel.hide{
    right: -500px;
}

#menu-panel #menu-panel input{
    right: 0;
}

#menu-panel img{
    position: absolute;
    right: 1rem;
    z-index: 3;
}
 
diaglog#process-config-form{ 
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* width: 300px; */
    padding: 20px;
    background-color: #ffffff;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); 
    border-radius: 4px !important;
}
dialog::backdrop{
    background-color: rgba(0,0,0,.1);
    backdrop-filter: blur(1px);
}

#chart-area{
    margin: 0 auto;
}

dialog#process-config-modal{
    width: 40vw;
    min-height: 40vh;
    border-radius: 8px;
    padding: 10px 20px;
}

dialog#process-config-modal.show-tab-1 .tab-prop-config{
    display: block;
}

dialog#process-config-modal.show-tab-1 .tab-process-logs{
    display: none;
}

dialog#process-config-modal.show-tab-2 .tab-prop-config{
    display: none;
}

dialog#process-config-modal.show-tab-2 .tab-process-logs{
    display: block;
}

dialog#process-config-modal .props-form h6 span[class^="dialog-tab"]{
    cursor: pointer;
    border-radius: 0 5px 0 0;
    /* border-top: 1px solid gainsboro; */
    /* border-right: 1px solid gainsboro; */
    border-right: 2px solid gray;
    color: gray;
    display: inline-block;
    height: 100%;
    padding: 8px 10px;
}

textarea{
    font-style: oblique;
    font-size: 1rem;
    font-weight: 400;
    text-align: left !important;
}

label.blue-checkbox input[type="checkbox"] {
    appearance: none; /* Remove default styles */
    -webkit-appearance: none; /* Remove default styles for WebKit browsers */
    -moz-appearance: none; /* Remove default styles for Firefox */
    width: 40px; /* Set width of the checkbox */
    height: 40px; /* Set height of the checkbox */
    background-color: none; /* Set background color to blue */
    border: 1px solid limegreen; /* Set border color to blue */
    border-radius: 3px; /* Add a slight border-radius */
    outline: none; /* Remove focus outline */
}

        /* Style the checked state */
        label.blue-checkbox input[type="checkbox"]:checked {
            background-color: limegreen;
            border: 1px solid limegreen;
        }

        /* Style the checkmark (tick mark) */
        label.blue-checkbox input[type="checkbox"]:checked::before {
            content: "\2713"; /* Unicode checkmark character */
            display: block;
            position: absolute;
            top: 3px; /* Adjust vertical position */
            left: 24px; /* Adjust horizontal position */
            color: white; /* Set checkmark color to white */
        }